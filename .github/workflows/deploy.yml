name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
    
    - name: Install dependencies
      run: npm ci
      
    - name: Inject Firebase config into app.js
      run: |
        # Read the app.js file
        APP_JS_CONTENT=$(cat app.js)
        
        # Create the Firebase config section
        FIREBASE_CONFIG="// Firebase Configuration - Injected during build process
const firebaseConfig = {
    apiKey: \"${{ secrets.FIREBASE_API_KEY }}\",
    authDomain: \"${{ secrets.FIREBASE_AUTH_DOMAIN }}\",
    projectId: \"${{ secrets.FIREBASE_PROJECT_ID }}\",
    storageBucket: \"${{ secrets.FIREBASE_STORAGE_BUCKET }}\",
    messagingSenderId: \"${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}\",
    appId: \"${{ secrets.FIREBASE_APP_ID }}\",
    measurementId: \"${{ secrets.FIREBASE_MEASUREMENT_ID }}\"
};"
        
        # Replace the placeholder comment with the actual config
        NEW_APP_JS="${APP_JS_CONTENT//\// Firebase Configuration - Injected during build process\n\/\/ DO NOT MODIFY THIS COMMENT - IT\'S USED AS A MARKER FOR INJECTION/$FIREBASE_CONFIG}"
        
        # Write the modified content back to app.js
        echo "$NEW_APP_JS" > app.js
    
    - name: Build
      run: npm run build
      
    - name: Deploy to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@v4.4.1
      with:
        branch: gh-pages
        folder: build  # Change this to your build output directory if different
